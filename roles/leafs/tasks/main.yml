---	

- name: configure protocols			          
  onyx_protocol:				
    ip_routing: enabled			
    bgp: enabled				
    lldp: enabled
  when: fabric_clear is undefined
  tags:
    - bgp

- name: clear protocols			          
  onyx_protocol:				
    bgp: disabled				
  when: fabric_clear is defined

- name: configure physical interfaces			
  onyx_interface:
    aggregate:
      - { name: "Eth{{ node.uplink1.num }}", description: 'to_spine1', speed: 40G, mtu: 9216 }
      - { name: "Eth{{ node.uplink2.num }}", description: 'to_spine2', speed: 40G, mtu: 9216 }
    state: up
  when: fabric_clear is undefined

- name: configure IPL peering VLAN
  onyx_vlan:
    vlan_id: "{{node.ipl.vlan}}"
    name: IPL_peering
    state: present
  when: fabric_clear is undefined

- name: clear IPL peering VLAN
  onyx_vlan:
    vlan_id: "{{node.ipl.vlan}}"
    state: absent
  when: fabric_clear is defined

- name: enable L3 uplinks
  onyx_config:				
     lines:					
       - interface ethernet {{ node.uplink1.num }}-{{ node.uplink2.num }} no switchport force	
  when: fabric_clear is undefined				
       
- name: configure L3 uplinks
  onyx_l3_interface:
    aggregate:
      - { name: "Loopback 0", ipv4: "{{ node.rid }}/32" }
      - { name: "Eth{{ node.uplink1.num }}", ipv4: "{{ node.uplink1.ip }}" }
      - { name: "Eth{{ node.uplink2.num }}", ipv4: "{{ node.uplink2.ip }}"  }	
      - { name: "Vlan {{node.ipl.vlan}}", ipv4: "{{ node.ipl.local_ip }}"  }
    state: present
  when: fabric_clear is undefined	

- name: clear L3 uplinks
  onyx_config:				
     lines:
       - "no interface loopback 0"
       - "no interface vlan {{ node.ipl.vlan }}"	
       - "interface ethernet {{ node.uplink1.num }}-{{ node.uplink2.num }} switchport force"
  when: fabric_clear is defined

- name: configure bgp router			
  onyx_bgp:				
    as_number: "{{ node.bgp.local_as }}"
    router_id: "{{ node.rid }}"
    neighbors:
      - remote_as: "{{ node.bgp.peer_as }}"	
        neighbor: "{{ node.ipl.peer_ip | ipaddr('address') }}"
      - remote_as: "{{ node.bgp.spine_as }}"				
        neighbor: "{{ node.uplink1.ip | ipaddr('network') }}"		
      - remote_as: "{{ node.bgp.spine_as }}"			
        neighbor: "{{ node.uplink2.ip | ipaddr('network') }}"	
    networks:	"{{ node.bgp.networks }}"		
    state: present	
  when: fabric_clear is undefined
  tags:
    - bgp